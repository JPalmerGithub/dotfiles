#!/bin/ksh

# Author:    $Author: $
# Date:      $Date: $
# Version:   $Name: $
# ID:        $Id: $

#  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#  Script to 
#
#   CMV -  4/21/2005 - Created.
#
#  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##
# Changes
# 07/15/2008 Ben Lutgens
# modified the compare_rpms function to fix a little bug that was causing
# libstdc++ to not be correctly listed as being "installed"


# ~~~~~~~~~~~
#  Variables
#
# ~~~~~~~~~~~
RPM_COMMAND="rpm -qa --qf '%-30{NAME}  %{VERSION}-%{RELEASE}\n' | sort"
RPMS="RPMS_INSTALLED"
RPMS_NI="RPMS_NOTINSTALLED"
RPMS_DV="RPMS_DIFF_VERS"
SECONDS=0

typeset -L32 RPM_NAME
typeset -L17 BRPM_VER
typeset -L17 CRPM_VER
typeset -L10 BBOX
typeset -L10 CBOX



# ~~~~~~~~~~~
#  Functions
#
# ~~~~~~~~~~~
usage()
{
cat <<EOF

   This script compares RPM packages (as well as version
   levels) between two boxes.

       Usage:  verify_rpms <base_box>  <compare_box>
        where:
            base_box: Master box
            compare_box: Box that you want to check

EOF

}

initialize()
{
    # Zero out any previous files
    #
    rm /var/tmp/*_rpms 2> /dev/null
    rm /var/tmp/RPMS*  2> /dev/null
}

cleanup()
{
    # Zero out any previous files
    #
    rm /var/tmp/*_rpms 2> /dev/null
    rm /var/tmp/RPMS*  2> /dev/null
}

# Compare RPMS on boxes
#
compare_rpms()
{
    # Removed the use of 'cat'
     for i in $(egrep -v "compat-libstdc|Oracle" /var/tmp/${BASE_BOX}_rpms | awk '{print $1}') 
     do
        STS=$(grep -c "^${i} " /var/tmp/${CMP_BOX}_rpms)
        if [ ${#STS} -gt 0 ]; then
           echo "${i}" >> /var/tmp/$RPMS
        else
           echo "${i}" >> /var/tmp/$RPMS_NI
        fi
     done
}

# Compare Versions of RPMS on boxes
#
compare_rpms_vers()
{
   # set -x

     for i in $(egrep -v "compat-libstdc|Oracle" /var/tmp/${RPMS} | awk '{print $1}')
     do
        BASEVER=` egrep "^${i} " /var/tmp/${BASE_BOX}_rpms | awk '{print $2}' `
        CMPVER=`  egrep "^${i} " /var/tmp/${CMP_BOX}_rpms  | awk '{print $2}' `
        RPM_NAME=$i
        BRPM_VER=$BASEVER
        CRPM_VER=$CMPVER
        if [ "${BASEVER}" != "${CMPVER}" ]; then
           echo "${RPM_NAME}  ${BRPM_VER}  ${CRPM_VER} " >> /var/tmp/$RPMS_DV
        fi
     done

   # set +x
}

Summary()
{

BBOX=$BASE_BOX
CBOX=$CMP_BOX


echo
echo "           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo "                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~              "
echo

if [ -f /var/tmp/$RPMS_NI ]; then

   NUM_NOT_INSTALLED=`wc -l /var/tmp/$RPMS_NI | awk '{print $1}' | sed -e 's/^ *//g'`
   cat <<EOF

           Base_Box    ($BBOX) RedHat Release: `ssh -x $BASE_BOX cat /etc/redhat-release `
           Compare_Box ($CBOX) RedHat Release: `ssh -x $CMP_BOX  cat /etc/redhat-release `


           These are the RPMS that are not installed currently on >> ${CMP_BOX} << ( ${NUM_NOT_INSTALLED} RPMs Total):

EOF
      for i in `cat /var/tmp/$RPMS_NI | awk '{print $1}' `
      do
         echo "\t\t\t $i "
      done

      echo
      echo "           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      echo

else
      echo "\t\t(`basename $0`: `date`) SUCCESS!! No uninstalled RPMs (${BASE_BOX} <--> ${CMP_BOX})."
fi

if [ -f /var/tmp/$RPMS_DV ]; then

    NUM_DIFF_REVS=`    wc -l /var/tmp/$RPMS_DV | awk '{print $1}' | sed -e 's/^ *//g'`
    cat <<EOF


           These are the RPMS that have different versions between >> ${BASE_BOX} <--> ${CMP_BOX} << ( ${NUM_DIFF_REVS} RPMs Total):

                                                           Base_Version       Compare_Version
                         RPM_Name                          (${BBOX})       (${CBOX})
                         --------------------------        ---------------    -----------------
EOF

     # Set IFS (Internal Field Separator) to the
     # Newline character in order to read Station
     # Names that have blanks in them
     ifs=$IFS
IFS="
"

      for i in `cat /var/tmp/$RPMS_DV `
      do
         echo "\t\t\t $i " >> /var/tmp/out.$$
      done
      # less /var/tmp/out.$$
      cat /var/tmp/out.$$

      # Reset IFS to the original value
      IFS=$ifs
      rm /var/tmp/out.$$

else
      echo "\t\t(`basename $0`: `date`) SUCCESS!! No difference in RPM versions (${BASE_BOX} <--> ${CMP_BOX})."
fi

}



# ~~~~~~
#  Main
#
# ~~~~~~

# Make sure both Base and Target box args are entered.
#
if [ $# -lt 2 ]; then
   echo
   echo "Error!!  Must enter two arguments -- exiting.... "
   usage
   exit 2
fi

echo "(`basename $0`: `date`) Starting...."
BASE_BOX=$1
CMP_BOX=$2

initialize

# Generate the list of RPMs installed on each of the boxes.
#
echo "\t(`basename $0`: `date`) Generating list of installed RPMs...."
ssh -x ${BASE_BOX} ${RPM_COMMAND} > /var/tmp/${BASE_BOX}_rpms
ssh -x ${CMP_BOX}  ${RPM_COMMAND} > /var/tmp/${CMP_BOX}_rpms

# Compare the RPMs that are installed.
#
echo "\t(`basename $0`: `date`) Comparing list(s) of installed RPMs...."
compare_rpms

# For the RPMs that are installed on both boxes: 
#  o Compare versions and release numbers.
#
echo "\t(`basename $0`: `date`) Comparing list(s) of RPM versions...."
compare_rpms_vers

echo "\t(`basename $0`: `date`) Generating Summary...."
Summary

# Clean up temporary files.
#
# echo "\t(`basename $0`: `date`) clean up temporary files...."
# cleanup

echo
echo "(`basename $0`: `date`) Complete."
echo
printf "(Total time for script: %.1f seconds)\n" $SECONDS
echo
